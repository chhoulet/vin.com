<?php

namespace Vin\FrontOfficeBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * VinRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class VinRepository extends EntityRepository
{
	public function vinDuMois()
	{
		$query = $this ->getEntityManager()->createQuery('
			SELECT v
			FROM VinFrontOfficeBundle:Vin v 
			WHERE v.price < 20
			')
		->setMaxResults(1);

		return $query -> getSingleResult();
	}

	public function bordeaux()
	{
		$query = $this -> getEntityManager()->createQuery('
			SELECT v 
			FROM VinFrontOfficeBundle:Vin v 
			JOIN v.region r
			WHERE r.nameRegion LIKE :region')
		->setParameter('region', '%ordeaux%')
		->setMaxResults(1);

		return $query -> getSingleResult();
	}

    public function getVinByPrice($price)
    {
        $query = $this ->getEntityManager()->createQuery('
            SELECT v
            FROM VinFrontOfficeBundle:Vin v
            WHERE v.price < :price')
        ->setParameter('price', $price);

        return $query -> getResult();
    }

    public function nbVins()
    {
        $query = $this -> getEntityManager()->createQuery('
            SELECT COUNT(v.id)
            FROM VinFrontOfficeBundle:Vin v
        ');

        return $query -> getSingleScalarResult();
    }

    public function vinLowPrice()
    {
        $query = $this -> getEntityManager()->createQuery('
            SELECT COUNT(v.id)
            FROM VinFrontOfficeBundle:Vin v
            WHERE v.price < 20');

        return $query -> getSingleScalarResult();
    }

    public function getVinLowPrice()
    {
        $query = $this->getEntityManager()->createQuery('
            SELECT v
            FROM VinFrontOfficeBundle:Vin v
            WHERE v.price <20');

        return $query->getResult();
    }

    public function getStockByRegion()
    {
        $query = $this -> getEntityManager()->createQuery('
           SELECT COUNT(v.id)
           FROM VinFrontOfficeBundle:Vin v
           JOIN v.region r
           WHERE r.nameRegion LIKE :region')
        ->setParameter('region', '%ordeaux%');

        return $query -> getSingleScalarResult();
    }

    public function nbPomerol()
    {
        $query = $this -> getEntityManager()->createQuery('
            SELECT COUNT(v.id)
            FROM VinFrontOfficeBundle:Vin v
            JOIN v.appellation a
            WHERE a.nameAppellation LIKE :pomerol')
        ->setParameter('pomerol','%omerol%');

        return $query -> getSingleScalarResult();
    }

    public function vinsMostExpensive()
    {
        $query = $this -> getEntityManager()->createQuery('
            SELECT v
            FROM VinFrontOfficeBundle:Vin v
            JOIN v.appellation a
            WHERE a.nameAppellation LIKE :sauternes
            ORDER BY v.price DESC')
        ->setParameter('sauternes','%auternes%')
        ->setMaxResults(4);

        return $query ->getResult();
    }

    public function vinBourgogne()
    {
        $query = $this -> getEntityManager()->createQuery('
            SELECT v
            FROM VinFrontOfficeBundle:Vin v
            JOIN v.region r
            WHERE r.nameRegion LIKE :chablis
            AND v.price < 30')
        ->setParameter('chablis','%ourgogne%');

        return $query -> getResult();
    }


    public function countRegion($region)
    {
        $query = $this -> getEntityManager()->createQuery('
            SELECT COUNT(v.id)
            FROM VinFrontOfficeBundle:Vin v
            JOIN v.region r
            WHERE r.nameRegion LIKE :bourgogne
            AND v.price < 20
            AND v.year < 2010')
        ->setParameter('bourgogne', $region);

        return $query -> getSingleScalarResult();
    }

    public function stockVin($quantite)
    {
        $query = $this -> getEntityManager()->createQuery('
            SELECT v
            FROM VinFrontOfficeBundle:Vin v
            WHERE v.stock < :nombre')

        ->setParameter('nombre',$quantite);

        return $query -> getResult();
    }

    public function vinLessPrice()
    {
        $query = $this ->getEntityManager()->createQuery('
            SELECT v
            FROM VinFrontOfficeBundle:Vin v
            ORDER BY v.price ASC')
        ->setMaxResults(1);

        return $query -> getSingleResult();
    }

    public function vinPrestige()
    {
        $query = $this -> getEntityManager()->createQuery('
            SELECT v
            FROM VinFrontOfficeBundle:Vin v
            JOIN v.appellation a
            WHERE a.nameAppellation LIKE :sauternes
            ORDER BY v.price DESC')
        ->setParameter('sauternes','%auternes%')
        ->setMaxResults(1);

        return $query ->getSingleResult();
    }
















}



























